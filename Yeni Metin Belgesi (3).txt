import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class PdfDoldurucu {

    public static void main(String[] args) {
        String originalPdfPath = "png2pdf.pdf";
        String outputPdfPath = "DOLDURULMUS_SÖZLEŞME.pdf";
        String fontPath = "DejaVuSans.ttf";

        try (PDDocument document = PDDocument.load(new File(originalPdfPath));
             Scanner scanner = new Scanner(System.in)) {

            System.out.println("Lütfen Üye İşyeri bilgilerini giriniz:");
            System.out.print("Unvan: ");
            String unvan = scanner.nextLine();
            System.out.print("TCKN / VKN & Vergi Dairesi: ");
            String tckn_vkn = scanner.nextLine();
            System.out.print("Telefon: ");
            String telefon = scanner.nextLine();
            System.out.print("Alternatif Telefon: ");
            String alternatif_telefon = scanner.nextLine();
            System.out.print("E-posta: ");
            String eposta = scanner.nextLine();
            System.out.print("Adres: ");
            String adres = scanner.nextLine();

            PDPage page = document.getPage(0);
            PDType0Font font = PDType0Font.load(document, new File(fontPath));

            try (PDPageContentStream contentStream = new PDPageContentStream(document, page, PDPageContentStream.AppendMode.APPEND, true, true)) {
                
                // === AYARLAR BÖLÜMÜ ===
                float startX = 185;                 // Tüm yazıların soldan uzaklığı
                float startY = 581;                 // İLK satırın alttan yüksekliği
                float lineSpacing = 11;             // Satırlar arasındaki dikey boşluk (Bu değeri artırıp azaltın)

                // === YAZILARI EKLEME BÖLÜMÜ ===
                // Konumlar artık yukarıdaki değişkenlere göre otomatik hesaplanıyor.
                writeText(contentStream, font, unvan,                 startX, startY);
                writeText(contentStream, font, tckn_vkn,               startX, startY - lineSpacing);       // 1. aralık
                writeText(contentStream, font, telefon,                startX, startY - (2 * lineSpacing)); // 2. aralık
                writeText(contentStream, font, alternatif_telefon,     startX, startY - (3 * lineSpacing)); // 3. aralık
                writeText(contentStream, font, eposta,                 startX, startY - (4 * lineSpacing)); // 4. aralık
                writeText(contentStream, font, adres,                  startX, startY - (5 * lineSpacing)); // 5. aralık
            }

            document.save(new File(outputPdfPath));
            System.out.println("Harika! Form dolduruldu ve '" + outputPdfPath + "' olarak kaydedildi.");

        } catch (IOException e) {
            System.err.println("PDF işlenirken bir hata oluştu: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * PDF'e belirli bir konuma metin yazan yardımcı metot.
     */
    private static void writeText(PDPageContentStream contentStream, PDType0Font font, String text, float x, float y) throws IOException {
        contentStream.beginText();
        contentStream.setFont(font, 10);
        contentStream.newLineAtOffset(x, y);
        contentStream.showText(text);
        contentStream.endText();
    }
}